{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "title": "visualization",
    "description": "AGV position and/or velocity for visualization purposes. Can be published at a higher rate if wanted. Since bandwidth may be expensive depening on the update rate for this topic, all fields are optional.",
    "subtopic": "/visualization",
    "type": "object",
    "properties": {
        "headerId": {
            "type": "integer",
            "description": "headerId of the message. The headerId is defined per topic and incremented by 1 with each sent (but not necessarily received) message."
        },
        "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp in ISO8601 format (YYYY-MM-DDTHH:mm:ss.fffZ).",
            "examples": [
                "1991-03-11T11:40:03.123Z"
            ]
        },
        "version": {
            "type": "string",
            "description": "Version of the protocol [Major].[Minor].[Patch]",
            "examples": [
                "1.3.2"
            ]
        },
        "manufacturer": {
            "type": "string",
            "description": "Manufacturer of the AGV"
        },
        "serialNumber": {
            "type": "string",
            "description": "Serial number of the AGV."
        },
        "agvPosition": {
            "type": "object",
            "title": "agvPosition",
            "description": "The AGVs position",
            "required": [
                "x",
                "y",
                "theta",
                "mapId",
                "positionInitialized"
            ],
            "properties": {
                "x": {
                    "type": "number"
                },
                "y": {
                    "type": "number"
                },
                "theta": {
                    "type": "number"
                },
                "mapId": {
                    "type": "string"
                },
                "positionInitialized": {
                    "type": "boolean",
                    "description": "True if the AGVs position is initialized, false, if position is not initizalized."
                },
                "localizationScore": {
                    "type": "number",
                    "description": "Localization score for SLAM based vehicles, if the AGV can communicate it.",
                    "minimum": 0.0,
                    "maximum": 1.0
                },
                "deviationRange": {
                    "type": "number",
                    "description": "Value for position deviation range in meters. Can be used if the AGV is able to derive it."
                }
            }
        },
        "velocity": {
            "type": "object",
            "title": "velocity",
            "description": "The AGVs velocity in vehicle coordinates",
            "properties": {
                "vx": {
                    "type": "number"
                },
                "vy": {
                    "type": "number"
                },
                "omega": {
                    "type": "number"
                }
            }
        },
        "plannedPath": {
            "type": "object",
            "required": [
                "trajectory"
            ],
            "description": "Defines the position on a map in world coordinates. Each floor has its own map.",
            "properties": {
                "trajectory": {
                    "$ref": "#/definitions/trajectory"
                },
                "traversedNodes": {
                    "type": "array",
                    "description": "Array of nodeIds as communicated in the currently executed order that are traversed within the shared planned path.",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "intermediatePath": {
            "type": "object",
            "description": "",
            "required": [
                "polyline"
            ],
            "properties": {
                "polyline": {
                    "type": "array",
                    "description": "Array of end points of segments of a polyline.",
                    "items": {
                        "type": "object",
                        "description": "Endpoint of a segment within a defined polyline.",
                        "required": ["x", "y", "ETA"],
                        "properties": {
                            "x": {
                                "type": "number",
                                "description": "X-coordinate described in the project-specific coordinate system.",
                                "unit": "m"
                            },
                            "y": {
                                "type": "number",
                                "description": "Y-coordinate described in the project-specific coordinate system.",
                                "unit": "m"
                            },
                            "theta": {
                                "type": "number",
                                "description": "Absolute orientation of the vehicle in the project-specific coordinate system.",
                                "unit": "rad",
                                "minimum": -3.14159265359,
                                "maximum": 3.14159265359
                            },
                            "ETA": {
                                "type": "string",
                                "description": "Estimated time of arrival/traversal. Formatted as a timestamp (ISO 8601, UTC); YYYY-MM-DDTHH:mm:ss.ffZ (e.g., '2017-04-15T11:40:03.12Z')."
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "trajectory": {
            "type": "object",
            "description": "The trajectory is to be communicated as a NURBS and is defined in chapter 6.7 Implementation of the Order message.\nTrajectory segments reach from the point, where the AGV starts to enter the edge to the point where it reports that the next node was traversed. ",
            "required": [
                "degree",
                "knotVector",
                "controlPoints"
            ],
            "properties": {
                "degree": {
                    "type": "integer",
                    "description": "Defines the number of control points that influence any given point on the curve. Increasing the degree increases continuity. If not defined, the default value is 1."
                },
                "knotVector": {
                    "type": "array",
                    "description": "Sequence of parameter values that determine where and how the control points affect the NURBS curve. knotVector has size of number of control points + degree + 1",
                    "items": {
                        "type": "number",
                        "maximum": 1.0,
                        "minimum": 0.0
                    }
                },
                "controlPoints": {
                    "type": "array",
                    "description": "List of JSON controlPoint objects defining the control points of the NURBS, which includes the beginning and end point.",
                    "items": {
                        "type": "object",
                        "required": [
                            "x",
                            "y"
                        ],
                        "properties": {
                            "x": {
                                "type": "number"
                            },
                            "y": {
                                "type": "number"
                            },
                            "weight": {
                                "type": "number",
                                "description": "The weight, with which this control point pulls on the curve.\nWhen not defined, the default will be 1.0."
                            }
                        }
                    }
                }
            }
        }
    }
}